<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:FileSearch">

	<!--  Normal Brushes  -->
	<!--<SolidColorBrush x:Key="NormalBrush" Color="{StaticResource {x:Static SystemColors.ControlColorKey}}" />
	<SolidColorBrush x:Key="DarkBrush" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" />
	<SolidColorBrush x:Key="PressedBrush" Color="{StaticResource {x:Static SystemColors.HotTrackColorKey}}" />
	<SolidColorBrush x:Key="SelectedBrush" Color="{StaticResource {x:Static SystemColors.WindowColorKey}}" />
	<SolidColorBrush x:Key="HighLightCellBrush" Color="#FFBEE6FD" />-->

	<!--  Border Brushes  -->
	<!--<SolidColorBrush x:Key="NormalBorderBrush" Color="{StaticResource {x:Static SystemColors.ScrollBarColorKey}}" />-->
	<!--<SolidColorBrush x:Key="DefaultedBorderBrush" Color="#777" />-->
	<!--<SolidColorBrush x:Key="PressedBorderBrush" Color="{StaticResource {x:Static SystemColors.HotTrackColorKey}}" />-->
	<!--<SolidColorBrush x:Key="HighLightBorderBrush" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" />-->

	<!--  Common Controls  -->
	<Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" BorderThickness="1" BorderBrush="{StaticResource Theme.BorderDark}" Background="{StaticResource Theme.ControlLight}">
						<ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>

						<DataTrigger Binding="{Binding Selected}" Value="False">
							<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
							<Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.ControlLight}" />
							<Setter Property="Margin" Value="0,4,0,0" />
							<Setter TargetName="Border" Property="Padding" Value="0,0,0,0" />
						</DataTrigger>

						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Theme.HighlightBorder}" />
							<Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Theme.HighlightBorder}" />
						</Trigger>

						<DataTrigger Binding="{Binding Selected}" Value="True">
							<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
							<Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Theme.BorderDark}" />
							<Setter Property="Margin" Value="0,2,0,0" />
							<Setter TargetName="Border" Property="Padding" Value="0,3,0,1" />

						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SearchAttributeGrid" TargetType="{x:Type DataGrid}">
		<Setter Property="CanUserReorderColumns" Value="False" />
		<Setter Property="CanUserResizeColumns" Value="False" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="SelectionMode" Value="Single" />
		<Setter Property="RowHeaderWidth" Value="0" />
		<Setter Property="BorderThickness" Value="0,1,1,1" />
		<Setter Property="CanUserResizeRows" Value="False" />
		<Setter Property="GridLinesVisibility" Value="Horizontal" />
		<Setter Property="BorderBrush" Value="{StaticResource Theme.BorderLight}" />
		<Setter Property="Background" Value="{StaticResource Theme.Window}" />
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Theme.BorderLight}" />
	</Style>

	<Style x:Key="ShortcutTooltip" TargetType="TextBlock">
		<Setter Property="Margin" Value="20,0,0,0" />
		<Setter Property="Foreground" Value="Gray" />
	</Style>

	<Style TargetType="Label">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="Foreground" Value="{Binding WindowForeground, FallbackValue=Black}" />
	</Style>

	<Style x:Key="CondencedTextLabel" TargetType="Label">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5,0" />
	</Style>

	<Style x:Key="CommonTextBox" TargetType="TextBox">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style x:Key="CommonComboBox" TargetType="ComboBox">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style TargetType="Border">
		<Setter Property="BorderBrush" Value="{Binding Path=(local:AppSettings.BorderForeground), FallbackValue=#FFD6D6D6}" />
	</Style>

	<Style x:Key="CommonButton" TargetType="Button">
		<Setter Property="Padding" Value="3" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="MinWidth" Value="80" />
		<Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}" />
	</Style>

	<Style x:Key="FlatButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="4,2" />
		<Setter Property="Padding" Value="2" />
	</Style>

	<Style x:Key="CommonCheckBox" TargetType="CheckBox">
		<Setter Property="Margin" Value="5" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CommonButtonIcon" TargetType="ContentPresenter">
		<Setter Property="MaxHeight" Value="16" />
		<Setter Property="MaxWidth" Value="16" />
		<Setter Property="Margin" Value="2" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.4" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CommonButtonLabel" TargetType="TextBlock">
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="0" />
	</Style>

	<Style x:Key="ToolbarButton" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />

		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ToolbarToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
		<Setter Property="Margin" Value="2" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="Transparent" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  Data Grids  -->
	<Style x:Key="DataGridCellAttributes" TargetType="{x:Type DataGridCell}">
		<Style.Triggers>
			<Trigger Property="DataGridCell.IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="False">
				<Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="True">
				<Setter Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CheckBoxColumn" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellAttributes}">
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="IsEditing" Value="True" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="EditableDataGrid" TargetType="DataGrid">
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="BorderBrush" Value="{StaticResource Theme.BorderLight}" />
		<Setter Property="Background" Value="{StaticResource Theme.Window}" />
		<Setter Property="RowHeaderWidth" Value="0" />
		<Setter Property="CanUserResizeRows" Value="False" />
		<Setter Property="GridLinesVisibility" Value="Horizontal" />
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Theme.BorderLight}" />
		<Setter Property="SelectionMode" Value="Single" />
	</Style>

	<Style x:Key="EditableDataGridCell" TargetType="{x:Type DataGridCell}">
		<Style.Triggers>
			<Trigger Property="DataGridCell.IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="False">
				<Setter Property="Background" Value="{StaticResource Theme.Window}" />
				<Setter Property="BorderBrush" Value="{StaticResource Theme.Window}" />
			</Trigger>
			<Trigger Property="DataGridCell.IsFocused" Value="True">
				<Setter Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
				<Setter Property="BorderBrush" Value="#CCDAFF" />
				<Setter Property="BorderThickness" Value="1" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="FileListCell" TargetType="{x:Type DataGridCell}">
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="BorderThickness" Value="4" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="IsTabStop" Value="True" />
				<Setter Property="Background" Value="{StaticResource Theme.HighlightBackground}" />
				<Setter Property="BorderBrush" Value="{StaticResource Theme.HighlightBackground}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="RightAlignedCell" TargetType="DataGridCell" BasedOn="{StaticResource FileListCell}">
		<Style.Setters>
			<Setter Property="TextBlock.TextAlignment" Value="Right" />
		</Style.Setters>
	</Style>

</ResourceDictionary>
