<Window x:Class="FileSearch.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:FileSearch" mc:Ignorable="d" Title="{Binding Title, FallbackValue='File Search'}" TextOptions.TextFormattingMode="Display" Closed="Window_Closed" Initialized="Window_Initialized" UseLayoutRounding="True" ResizeMode="CanResizeWithGrip" ContentRendered="Window_ContentRendered">

	<Window.Resources>

		<local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

		<ContextMenu x:Key="ContextMenuFileItem">
			<MenuItem Header="Open Containing Folder" Command="local:Commands.OpenContainingFolder" />
			<MenuItem Header="Copy Path to Clipboard" Command="local:Commands.CopyPathToClipboard" />
			<MenuItem Header="Copy Results to Clipboard" Command="local:Commands.CopyResultsToClipboard" />
			<MenuItem Header="Copy Results as CSV" Command="local:Commands.CopyResultsAsCsv" />
		</ContextMenu>

		<ContextMenu x:Key="ContextMenuTabButton">
			<MenuItem Header="Rename" Command="local:Commands.RenameTab" />
		</ContextMenu>

	</Window.Resources>

	<Window.CommandBindings>

		<CommandBinding Command="local:Commands.Exit" Executed="CommandExit_Executed" />
		<CommandBinding Command="local:Commands.NewTab" Executed="CommandNewTab_Executed" />
		<CommandBinding Command="local:Commands.Options" Executed="CommnadOptions_Executed" />
		<CommandBinding Command="local:Commands.About" Executed="CommandAbout_Executed" />

		<CommandBinding Command="local:Commands.StartSearch" Executed="CommandStartSearch_Executed" />
		<CommandBinding Command="local:Commands.StopSearch" Executed="CommandStopSearch_Executed" />
		<CommandBinding Command="local:Commands.DeleteSearch" Executed="CommandDeleteSearch_Executed" />
		<CommandBinding Command="local:Commands.DuplicateSearch" Executed="CommandDuplicateSearch_Executed" />

		<CommandBinding Command="local:Commands.Edit" CanExecute="CommandEdit_CanExecute" />

		<CommandBinding Command="local:Commands.SaveFile" Executed="CommandSaveFile_Executed" CanExecute="CommandSaveFile_CanExecute" />
		<CommandBinding Command="local:Commands.PreviousHit" Executed="CommandPreviousHit_Executed" CanExecute="CommandPreviousHit_CanExecute" />
		<CommandBinding Command="local:Commands.NextHit" Executed="CommandNextHit_Executed" CanExecute="CommandNextHit_CanExecute" />
		<CommandBinding Command="local:Commands.CurrentHit" Executed="CommandCurrentHit_Executed" CanExecute="CommandCurrentHit_CanExecute" />
		<CommandBinding Command="local:Commands.FirstHit" Executed="CommandFirstHit_Executed" CanExecute="CommandFirstHit_CanExecute" />
		<CommandBinding Command="local:Commands.LastHit" Executed="CommandLastHit_Executed" CanExecute="CommandLastHit_CanExecute" />

		<CommandBinding Command="local:Commands.Find" Executed="CommandFind_Executed" />
		<CommandBinding Command="local:Commands.FindNext" Executed="CommandFindNext_Executed" CanExecute="CommandFindNext_CanExecute" />
		<CommandBinding Command="local:Commands.FindPrevious" Executed="CommandFindPrevious_Executed" CanExecute="CommandFindPrevious_CanExecute" />
		<CommandBinding Command="local:Commands.CloseFind" Executed="CommandCloseFind_Executed" />

		<CommandBinding Command="local:Commands.OpenContainingFolder" Executed="CommandOpenContainingFolder_Executed" CanExecute="CommandOpenContainingFolder_CanExecute" />
		<CommandBinding Command="local:Commands.CopyPathToClipboard" Executed="CommandCopyPathToClipboard_Executed" CanExecute="CommandCopyPathToClipboard_CanExecute" />
		<CommandBinding Command="local:Commands.CopyResultsToClipboard" Executed="CommandCopyResultsToClipboard_Executed" CanExecute="CommandCopyResultsToClipboard_CanExecute" />
		<CommandBinding Command="local:Commands.CopyResultsAsCsv" Executed="CommandCopyResultsAsCsv_Executed" CanExecute="CommandCopyResultsAsCsv_CanExecute" />

		<CommandBinding Command="local:Commands.RenameTab" Executed="CommandRenameTab_Executed" />

	</Window.CommandBindings>

	<Grid>
		<Grid.Resources>

			<DataTemplate x:Key="SearchInstanceTabTemplate">
				<Button Click="TabButton_Click" ContextMenuOpening="TabButton_ContextMenuOpening" Tag="{Binding}" Style="{StaticResource TabButtonStyle}" ContextMenu="{StaticResource ContextMenuTabButton}">
					<StackPanel Margin="2,0" Orientation="Vertical" MinWidth="20">
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" Margin="0,0,0,1" />
						<StackPanel Height="2">
							<ProgressBar Height="2" Value="{Binding Progress}" Visibility="{Binding SearchInProgress, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</StackPanel>
					</StackPanel>
				</Button>
			</DataTemplate>

		</Grid.Resources>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!--Menu Bar-->
		<Grid Grid.Row="0" x:Name="GridMenu" Margin="0,2,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<!--Menu-->
			<Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource  {x:Static SystemColors.ScrollBarBrushKey} }">
				<Menu Grid.Row="0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" VerticalAlignment="Center" Margin="2,0">
					<MenuItem Header="File">
						<MenuItem Header="Exit" Command="local:Commands.Exit" />
						<MenuItem Header="New Tab" Command="local:Commands.NewTab" />
					</MenuItem>
					<MenuItem Header="Edit">
						<MenuItem Header="Find" Command="local:Commands.Find" />
						<MenuItem Header="Find Next" Command="local:Commands.FindNext" />
						<MenuItem Header="Find Previous" Command="local:Commands.FindPrevious" />
					</MenuItem>
					<MenuItem Header="Tools">
						<MenuItem Header="Options" Command="local:Commands.Options" />
					</MenuItem>
					<MenuItem Header="Help">
						<MenuItem Header="About" Command="local:Commands.About" />
					</MenuItem>
				</Menu>
			</Border>

			<!--Instance Tabs-->
			<ItemsControl x:Name="Tab" ItemsSource="{Binding SearchInstances}" Grid.Column="1" Grid.Row="0" ItemTemplate="{StaticResource SearchInstanceTabTemplate}" IsTabStop="False">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>

			<Button x:Name="ButtonNewSearchInstance" Content="*" Command="local:Commands.NewTab" Grid.Column="2" Margin="0,4,0,0" MinWidth="26" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
			<Border Grid.Column="3" BorderThickness="0,0,0,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}">

				<StackPanel x:Name="UpdatePanel" Orientation="Horizontal" Visibility="{Binding Path=NewBuildAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Right">
					<Label Margin="3" Padding="0" VerticalAlignment="Center">
						<Hyperlink RequestNavigate="Hyperlink_OpenHomepage" NavigateUri="">New Version Available</Hyperlink>
					</Label>
					<!--<Button BorderThickness="0" Margin="3" Padding="0" Foreground="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" Background="Transparent" VerticalAlignment="Center">
						&#x274C;
					</Button>-->
				</StackPanel>
			</Border>
		</Grid>

		<!--Main Toolbar-->
		<WrapPanel DockPanel.Dock="Top" x:Name="ToolbarMain" Grid.Row="1" Orientation="Horizontal">
			<WrapPanel.Background>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="{StaticResource {x:Static SystemColors.WindowColorKey}}" Offset="0" />
					<GradientStop Color="{StaticResource {x:Static SystemColors.ControlColorKey}}" Offset="1" />
				</LinearGradientBrush>
			</WrapPanel.Background>

			<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.StartSearch" IsEnabled="{Binding Path=ActiveSearchInstance.SearchInProgress, Converter={StaticResource InverseBooleanConverter}}">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource StartSearchIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Start Search" VerticalAlignment="Center" />
				</StackPanel>
			</Button>

			<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.StopSearch" IsEnabled="{Binding Path=ActiveSearchInstance.SearchInProgress}">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource StopSearchIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Stop Search" VerticalAlignment="Center" />
				</StackPanel>
			</Button>

			<ToggleButton IsChecked="{Binding ActiveSearchInstance.FindAllPhrases}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Checked">
				<ToggleButton.Resources>
					<DataTemplate x:Key="Unpressed">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource FindAnyPhraseIcon}" Style="{StaticResource CommonButtonIcon}" />
							<TextBlock Text="Find All Phrases" VerticalAlignment="Center" />
						</StackPanel>
					</DataTemplate>
					<DataTemplate x:Key="Pressed">
						<StackPanel Orientation="Horizontal">
							<ContentPresenter ContentTemplate="{StaticResource FindAllPhrasesIcon}" Style="{StaticResource CommonButtonIcon}" />
							<TextBlock Text="Find All Phrases" VerticalAlignment="Center" />
						</StackPanel>
					</DataTemplate>
				</ToggleButton.Resources>
				<ToggleButton.Style>
					<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToolbarToggleButton}">
						<Setter Property="ContentTemplate" Value="{StaticResource Unpressed}" />
						<Style.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="ContentTemplate" Value="{StaticResource Pressed}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</ToggleButton.Style>
			</ToggleButton>

			<ToggleButton Style="{StaticResource ToolbarToggleButton}" Unchecked="ToggleButton_Checked" Checked="ToggleButton_Checked" IsChecked="{Binding ActiveSearchInstance.CaseSensitive}">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource CaseSemsitiveIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Case Sensitive" VerticalAlignment="Center" />
				</StackPanel>
			</ToggleButton>

			<ToggleButton Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding ActiveSearchInstance.RegexSearch}">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource RegexIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Regex Search" VerticalAlignment="Center" />
				</StackPanel>
			</ToggleButton>

			<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.DeleteSearch" IsEnabled="{Binding Path=ActiveSearchInstance.SearchInProgress, Converter={StaticResource InverseBooleanConverter}}">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource DeleteSearchIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Delete Search" VerticalAlignment="Center" />
				</StackPanel>
			</Button>

			<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.DuplicateSearch">
				<StackPanel Orientation="Horizontal">
					<ContentPresenter ContentTemplate="{StaticResource DuplicateSearchIcon}" Style="{StaticResource CommonButtonIcon}" />
					<TextBlock Text="Duplicate Search" VerticalAlignment="Center" />
				</StackPanel>
			</Button>

		</WrapPanel>

		<Grid x:Name="MainGrid" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{Binding SearchAttributesWidth, Mode=TwoWay}" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="4*" />
			</Grid.ColumnDefinitions>

			<!--Search Attributes-->
			<Grid x:Name="GridSearchAttributes">
				<Grid.RowDefinitions>
					<RowDefinition Height="{Binding PhraseGridHeight, Mode=TwoWay}" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="{Binding DirectoriesGridHeight, Mode=TwoWay}" />
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>
				<DataGrid x:Name="dataGridSearchPhrases" Grid.Row="0" Style="{StaticResource SearchAttributeGrid}" ItemsSource="{Binding ActiveSearchInstance.SearchPhrases, Mode=TwoWay}" HorizontalScrollBarVisibility="Disabled">
					<DataGrid.Columns>
						<DataGridCheckBoxColumn Binding="{Binding Used, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource CheckBoxColumn}" Header="" />
						<DataGridTextColumn Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource DataGridCellAttributes}" Header="Phrase" Width="*" />
					</DataGrid.Columns>
				</DataGrid>
				<GridSplitter Grid.Row="1" Height="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Focusable="False" />
				<DataGrid x:Name="dataGridSearchDirectories" Grid.Row="2" Style="{StaticResource SearchAttributeGrid}" ItemsSource="{Binding ActiveSearchInstance.SearchDirectories, Mode=TwoWay}" HorizontalScrollBarVisibility="Disabled">
					<DataGrid.Columns>
						<DataGridCheckBoxColumn Binding="{Binding Used, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource CheckBoxColumn}" Header="" />
						<DataGridTextColumn Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource DataGridCellAttributes}" Header="Search Directories" Width="*" />
						<DataGridTemplateColumn CellStyle="{StaticResource DataGridCellAttributes}">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Button BorderThickness="0" Click="BrowseDirectoryButton_Click">...</Button>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
				<GridSplitter Grid.Row="3" Height="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Focusable="False" />
				<DataGrid x:Name="dataGridSearcFiles" Grid.Row="4" Style="{StaticResource SearchAttributeGrid}" ItemsSource="{Binding ActiveSearchInstance.SearchFiles, Mode=TwoWay}" HorizontalScrollBarVisibility="Disabled">
					<DataGrid.Columns>
						<DataGridCheckBoxColumn Binding="{Binding Used, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource CheckBoxColumn}" Header="" />
						<DataGridTextColumn Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource DataGridCellAttributes}" Header="Files to Search" Width="*" />
					</DataGrid.Columns>
				</DataGrid>
			</Grid>
			<GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Center" Focusable="False" />
			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="{Binding FileListHeight, Mode=TwoWay}" />
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>

				<!--File List-->
				<local:ExtendedDataGrid CellStyle="{StaticResource FileListCell}" x:Name="dataGridFileList" ItemsSource="{Binding ActiveSearchInstance.FilesWithHits}" ContextMenu="{StaticResource ContextMenuFileItem}" VirtualizingPanel.IsVirtualizing="True" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}" BorderThickness="1,1,0,1" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" SelectionMode="Extended" SelectionUnit="FullRow" AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True" HeadersVisibility="Column" SelectionChanged="DataGridFileList_SelectionChanged" Sorting="DataGridFileList_Sorting" CanUserReorderColumns="False">
					<DataGrid.RowStyle>
						<Style TargetType="DataGridRow">
							<EventSetter Event="MouseDoubleClick" Handler="DataGridFileList_RowDoubleClick" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding Visible}" Value="True">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
								<DataTrigger Binding="{Binding Visible}" Value="False">
									<Setter Property="Visibility" Value="Collapsed" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</DataGrid.RowStyle>
					<DataGrid.Columns>
						<DataGridTextColumn Binding="{Binding Path}" Header="File" />
						<DataGridTextColumn Binding="{Binding Size, StringFormat={}{0:N0}}" Header="Size">
							<DataGridTextColumn.ElementStyle>
								<Style>
									<Setter Property="TextBlock.TextAlignment" Value="Right" />
								</Style>
							</DataGridTextColumn.ElementStyle>
						</DataGridTextColumn>
						<DataGridTextColumn Binding="{Binding Date, StringFormat={}{0:g}}" Header="Date" />
					</DataGrid.Columns>
				</local:ExtendedDataGrid>

				<GridSplitter Grid.Row="1" Height="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Focusable="False" />

				<!--Preview Pane-->
				<Border Grid.Row="2" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey}}" BorderThickness="1,1,0,1">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<!--Preview Toolbar-->
						<StackPanel x:Name="ToolbarPreview" Grid.Row="0" Orientation="Horizontal">
							<StackPanel.Background>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<GradientStop Color="{StaticResource {x:Static SystemColors.WindowColorKey}}" Offset="0" />
									<GradientStop Color="{StaticResource {x:Static SystemColors.ControlColorKey}}" Offset="1" />
								</LinearGradientBrush>
							</StackPanel.Background>

							<ToggleButton Command="local:Commands.Edit" IsChecked="{Binding EditMode}">
								<ToggleButton.Resources>
									<DataTemplate x:Key="Unpressed">
										<StackPanel Orientation="Horizontal">
											<ContentPresenter ContentTemplate="{StaticResource EditIcon}" Style="{StaticResource CommonButtonIcon}" />
											<StackPanel.ToolTip>
												<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="Enable Editing" />
													</StackPanel>
												</ToolTip>
											</StackPanel.ToolTip>
										</StackPanel>
									</DataTemplate>
									<DataTemplate x:Key="Pressed">
										<StackPanel Orientation="Horizontal">
											<ContentPresenter ContentTemplate="{StaticResource EditIcon2}" Style="{StaticResource CommonButtonIcon}" />
											<StackPanel.ToolTip>
												<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
													<StackPanel Orientation="Horizontal">
														<TextBlock Text="Unlocked" />
													</StackPanel>
												</ToolTip>
											</StackPanel.ToolTip>
										</StackPanel>
									</DataTemplate>
								</ToggleButton.Resources>
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToolbarToggleButton}">
										<Setter Property="ContentTemplate" Value="{StaticResource Unpressed}" />
										<Style.Triggers>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="ContentTemplate" Value="{StaticResource Pressed}" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.SaveFile">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource SaveIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Ctrl+S" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.FirstHit">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource FirstHitIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Ctrl+Left" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.PreviousHit">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource PreviousHitIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Left" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.CurrentHit">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource CurrentHitIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Ctrl+Space" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.NextHit">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource NextHitIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Right" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<Button Style="{StaticResource ToolbarButton}" Command="local:Commands.LastHit">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource LastHitIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<Button.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Path=Command.Text}" />
											<TextBlock Text="Ctrl+Right" Style="{StaticResource ShortcutTooltip}" />
										</StackPanel>
									</ToolTip>
								</Button.ToolTip>
							</Button>

							<!--<ToggleButton x:Name="ToggleButtonShowWhiteSpaceCharacters" IsEnabled="{Binding FileVissible}" Style="{StaticResource ToolbarToggleButton}" IsChecked="{Binding ShowWhiteSpaceCharacters}">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource ShowSpecialCharactersIcon}" Style="{StaticResource CommonButtonIcon}" />
								</StackPanel>
								<ToggleButton.ToolTip>
									<ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="Show Special Characters" VerticalAlignment="Center" />
										</StackPanel>
									</ToolTip>
								</ToggleButton.ToolTip>
							</ToggleButton>-->

							<ToggleButton Style="{StaticResource ToolbarToggleButton}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Checked" IsChecked="{Binding ActiveSearchInstance.ShowOnlyHits}" IsEnabled="{Binding Path=FileEdited, Converter={StaticResource InverseBooleanConverter}}">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{StaticResource ShowOnlyHitsIcon}" Style="{StaticResource CommonButtonIcon}" />
									<TextBlock Text="Show Only Hits" VerticalAlignment="Center" />
								</StackPanel>
							</ToggleButton>

							<StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding ActiveSearchInstance.ShowOnlyHits, Converter={StaticResource BooleanToVisibilityConverter}}">
								<ComboBox SelectedIndex="{Binding ActiveSearchInstance.SurroundingLines}" Width="35" VerticalAlignment="Center" SelectionChanged="ComboBox_SelectionChanged">
									<ComboBoxItem Content="0" />
									<ComboBoxItem Content="1" />
									<ComboBoxItem Content="2" />
									<ComboBoxItem Content="3" />
									<ComboBoxItem Content="4" />
									<ComboBoxItem Content="5" />
									<ComboBoxItem Content="6" />
									<ComboBoxItem Content="7" />
									<ComboBoxItem Content="8" />
									<ComboBoxItem Content="9" />
								</ComboBox>
							</StackPanel>

							<StackPanel Name="CurrentFilePanel" Height="20" Orientation="Horizontal">
								<Separator Margin="8,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
								<TextBlock Name="CurrentFile" Text="Current File" Margin="0,0" Foreground="{StaticResource  {x:Static SystemColors.ControlDarkDarkBrushKey} }" VerticalAlignment="Center" />
							</StackPanel>

						</StackPanel>

						<!--Preview Control-->
						<Grid Grid.Row="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<local:PreviewControl x:Name="Preview" Grid.Row="0" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" Lines="{Binding PreviewLines, Mode=TwoWay}" VerticalOffset="{Binding ElementName=VerticalScrollbar, Path=Value, Mode=TwoWay}" HorizontalOffset="{Binding Value, ElementName=HorizontalScrollbar, Mode=TwoWay}" CurrentMatch="{Binding Path=CurrentHit}" Edited="{Binding FileEdited, Mode=TwoWay}" EditMode="{Binding EditMode}" UpdateTrigger="{Binding UpdateTrigger}" MouseWheel="Preview_MouseWheel" FocusVisualStyle="{x:Null}" />
							<local:HitMapControl Grid.Column="1" Width="10" Lines="{Binding PreviewLines, Mode=TwoWay}" UpdateTrigger="{Binding UpdateTrigger}" IsTabStop="False" Focusable="False" />
							<ScrollBar Grid.Column="2" Name="VerticalScrollbar" SmallChange="1" LargeChange="{Binding Path=VisibleLines, ElementName=Preview}" ViewportSize="{Binding ElementName=Preview, Path=VisibleLines, Mode=TwoWay}" Maximum="{Binding ElementName=Preview, Path=MaxVerialcalScroll }" />
							<ScrollBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="HorizontalScrollbar" Orientation="Horizontal" Maximum="{Binding ElementName=Preview, Path=MaxHorizontalScroll}" ViewportSize="{Binding ElementName=Preview, Path=TextAreaWidth}" SmallChange="10" LargeChange="{Binding ElementName=Preview, Path=TextAreaWidth}" />
							<StackPanel Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="1" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}" />
						</Grid>

					</Grid>
				</Border>
			</Grid>
		</Grid>

		<!--Search panel-->
		<Border Name="SearchPanel" Grid.Row="3" Grid.ColumnSpan="3" BorderThickness="0,0,0,1" BorderBrush="{StaticResource {x:Static SystemColors.ScrollBarBrushKey} }" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
			<StackPanel Orientation="Horizontal">
				<Button Content="Close" Margin="5,1" Padding="2" Background="Transparent" BorderThickness="0" Command="local:Commands.CloseFind" />
				<TextBox Name="SearchBox" Margin="5,2" Padding="2" Width="300" VerticalAlignment="Center" TextChanged="SearchBox_TextChanged" />
				<Button Content="Next" Margin="5,1" Padding="2" Background="Transparent" BorderThickness="0" Command="local:Commands.FindNext" />
				<Button Content="Previous" Margin="5,1" Padding="2" Background="Transparent" BorderThickness="0" Command="local:Commands.FindPrevious" />
				<CheckBox Name="MatchCase" Content="Match Case" Margin="5,1" Padding="2" VerticalAlignment="Center" VerticalContentAlignment="Center" Checked="MatchCase_Checked" Unchecked="MatchCase_Checked" />
			</StackPanel>
		</Border>

		<!--Status Bar-->
		<Grid x:Name="GridStatusbar" Grid.Row="4" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<TextBlock Text="{Binding ActiveSearchInstance.StatusText}" Margin="3" />
			<StackPanel Grid.Column="1" Orientation="Horizontal">
				<StackPanel Orientation="Horizontal">
					<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
					<TextBlock Text="{Binding ActiveSearchInstance.FileCountStatus}" Margin="3" />
				</StackPanel>
				<StackPanel Orientation="Horizontal" Visibility="{Binding ActiveSearchInstance.AnyIgnoredFiles, Converter={StaticResource BooleanToVisibilityConverter}}">
					<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
					<TextBlock VerticalAlignment="Center" Margin="3">
						<Hyperlink Name="IgnoredFilesCountHyperlink" Click="IgnoredFilesCountHyperlink_Click">
								<TextBlock Text="{Binding ActiveSearchInstance.IgnoredFilesCountStatus}" />
						</Hyperlink>
					</TextBlock>
				</StackPanel>
				<StackPanel Orientation="Horizontal" Visibility="{Binding ActiveSearchInstance.AnyErrors, Converter={StaticResource BooleanToVisibilityConverter}}">
					<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
					<TextBlock VerticalAlignment="Center" Margin="3">
						<Hyperlink Name="ErrorCountHyperlink" Click="ErrorCountHyperlink_Click">
								<TextBlock Text="{Binding ActiveSearchInstance.ErrorCountStatus}" />
						</Hyperlink>
					</TextBlock>
				</StackPanel>
				<ProgressBar Value="{Binding ActiveSearchInstance.Progress}" Visibility="{Binding ActiveSearchInstance.SearchInProgress, Converter={StaticResource BooleanToVisibilityConverter}}" Height="14" Width="100" Margin="3" />
				<StackPanel Width="20" />
			</StackPanel>
		</Grid>

		<!--Used to measure the size of one character in the chosen font-->
		<TextBlock x:Name="OneCharacter" Grid.Row="2" Text="M" Visibility="Hidden" FontFamily="{Binding Font}" FontSize="{Binding FontSize}" HorizontalAlignment="Left" VerticalAlignment="Top" />
	</Grid>
</Window>
